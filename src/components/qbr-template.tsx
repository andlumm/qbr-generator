import { PartnerMetrics, Partner } from '@/lib/dummy-data'

export const generateStructuredQBR = (partner: Partner, metrics: PartnerMetrics) => {
  const getStatusEmoji = (value: number, thresholds: {good: number, warning: number}) => {
    if (value >= thresholds.good) return 'ðŸŸ¢'
    if (value >= thresholds.warning) return 'ðŸŸ¡'
    return 'ðŸ”´'
  }

  return `# QBR Navigator â€“ ${partner.name} ${metrics.quarter}

## ðŸ”¢ KPI Snapshot

| KPI | Wert | Status |
|-----|------|--------|
| Pipeline Coverage | ${metrics.pipeline.coverage}% | ${getStatusEmoji(metrics.pipeline.coverage, {good: 100, warning: 80})} |
| Deal Registrations (Won) | ${metrics.dealRegistration.won}/${metrics.dealRegistration.submitted} | ${getStatusEmoji(metrics.dealRegistration.winRate, {good: 30, warning: 20})} |
| Certified Developers | ${metrics.engagement.certificationsActive} | ${getStatusEmoji(metrics.engagement.certificationsActive, {good: 5, warning: 3})} |
| Training Completion | ${metrics.engagement.trainingCompletionRate}% | ${getStatusEmoji(metrics.engagement.trainingCompletionRate, {good: 90, warning: 70})} |
| Marketing Fund Utilization | ${metrics.engagement.marketingFundUtilization}% | ${getStatusEmoji(metrics.engagement.marketingFundUtilization, {good: 80, warning: 60})} |
| CSAT (avg. project rating) | ${metrics.delivery.customerSatisfaction} / 5 | ${getStatusEmoji(metrics.delivery.customerSatisfaction, {good: 4.0, warning: 3.5})} |

---

## ðŸ§  Highlights & Insights

**Letzte Wins:**
${metrics.highlights.map(h => `- ${h}`).join('\n')}

**Strategische Themen:**
${metrics.initiatives.map(i => `- ${i}`).join('\n')}

**Risiken:**
${metrics.challenges.map(c => `- ${c}`).join('\n')}

---

## âœ… Empfehlung & NÃ¤chste Schritte

${metrics.riskLevel === 'High' ? 
`- **SofortmaÃŸnahmen erforderlich:** Executive Alignment Meeting innerhalb 2 Wochen
- Deal Registration Process Review mit Sales Leadership
- Intensiviertes Enablement-Programm starten` :
metrics.riskLevel === 'Medium' ?
`- Joint Pipeline Review bis Ende des Monats
- Technisches Deep Dive fÃ¼r neue Features planen
- Marketing-Kampagnen-Kalender abstimmen` :
`- Expansion in neue Verticals evaluieren
- Success Stories fÃ¼r Case Studies dokumentieren
- Strategic Partner Status Review initiieren`}

---

## ðŸ“Š Performance Details

### Revenue Performance
- **Aktuelles Quartal:** $${metrics.revenue.current.toLocaleString()} (${metrics.revenue.growth > 0 ? '+' : ''}${metrics.revenue.growth}% QoQ)
- **Target Attainment:** ${metrics.revenue.attainment}%
- **YTD Revenue:** $${metrics.revenue.ytd.toLocaleString()}

### Pipeline Health
- **Total Pipeline:** $${metrics.pipeline.value.toLocaleString()} (${metrics.pipeline.count} Opportunities)
- **Conversion Rate:** ${metrics.pipeline.conversion}%
- **Avg. Deal Size:** $${metrics.pipeline.avgDealSize.toLocaleString()}

### Partner Engagement
- **Portal Activity:** ${metrics.engagement.portalLogins} Logins (letzte 30 Tage)
- **Event Participation:** ${metrics.engagement.eventParticipation} Events
- **Time to Go-Live:** ${metrics.delivery.avgTimeToGoLive} Tage (Durchschnitt)

---

*Generated by QBR Navigator | ${new Date().toLocaleDateString('de-DE')}*`
}

export const QBRDisplay = ({ partner, metrics }: { partner: Partner, metrics: PartnerMetrics }) => {
  const content = generateStructuredQBR(partner, metrics)
  
  return (
    <div className="prose prose-slate max-w-none">
      <div className="bg-white rounded-lg p-8 shadow-sm" 
           dangerouslySetInnerHTML={{ 
             __html: content
               .replace(/\n/g, '<br />')
               .replace(/^# (.+)$/gm, '<h1>$1</h1>')
               .replace(/^## (.+)$/gm, '<h2>$1</h2>')
               .replace(/^### (.+)$/gm, '<h3>$1</h3>')
               .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
               .replace(/\*(.*?)\*/g, '<em>$1</em>')
               .replace(/^- (.+)$/gm, '<li>$1</li>')
               .replace(/(<li>.*<\/li>\s*)+/g, '<ul>$&</ul>')
               .replace(/\|(.+)\|(.+)\|(.+)\|/g, (match, col1, col2, col3) => {
                 if (match.includes('---')) return ''
                 return `<tr><td>${col1.trim()}</td><td>${col2.trim()}</td><td>${col3.trim()}</td></tr>`
               })
               .replace(/(<tr>.*<\/tr>\s*)+/g, '<table class="min-w-full">$&</table>')
           }} 
      />
    </div>
  )
}